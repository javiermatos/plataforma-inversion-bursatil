% Correctness test

%clc;
fprintf('Performing correctness test...\n');

%% Startup
startDate = '2009-01-01';
endDate = '2011-01-01';
dataSerie = YahooDataSerie('ATVI','days',1,startDate,endDate);

%% AlgoTrader instances
fprintf('Creating AlgoTrader instances...\n');
algoTraderSet = { ...
    ...
    ... % Based on indicators
    BollingerBands(dataSerie), ...
    MovingAverage(dataSerie), ...
    MovingAverageDisplaced(dataSerie), ...
    MovingAveragesCrossing(dataSerie), ...
    MovingAveragesCrossingThreshold(dataSerie), ...
    MovingAverageThreshold(dataSerie), ...
    ThreeMovingAverages(dataSerie), ...
    ...
    ... % Based on oscillators
    AverageDirectionalIndex(dataSerie), ...
    Momentum(dataSerie), ...
    MomentumCrossing(dataSerie), ...
    MovingAverageConvergenceDivergence(dataSerie), ...
    RelativeStrengthIndex(dataSerie), ...
    RelativeStrengthIndexCrossing(dataSerie), ...
    Stochastic(dataSerie), ...
    StochasticCrossing(dataSerie), ...
    StochasticStateMachine(dataSerie), ...
    ...
    ... % LastN family
    LastN(dataSerie), ...
    LastNRatio(dataSerie), ...
    LastNTrends(dataSerie), ...
    LastNTrendsWeighted(dataSerie), ...
    LastNWeighted(dataSerie), ...
    ...
    ... % Others
    FakeOptimum(dataSerie), ...
    Random(dataSerie), ...
    DoNothing(dataSerie)
    }';

%
N = length(algoTraderSet);

%% computeSignal
fprintf('Testing computeSignal method...\n');
for i = 1:N
    
    algoTraderSet{i}.computeSignal();
    
end

%% plot
fprintf('Testing plot method...\n');
for i = 1:N
    
    fig = algoTraderSet{i}.plot(3,50,100);
    
    %pause(3);
    
    close(fig);
    
end
